{"ast":null,"code":"var _jsxFileName = \"/Users/ritikthakur/Desktop/assessment/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [xAxis, setXAxis] = useState([]);\n  const [yAxis, setYAxis] = useState([]);\n  const fetchXAxis = async () => {\n    try {\n      const response = await axios.get('https://retoolapi.dev/gDa8uC/data');\n      setXAxis(response.data);\n    } catch (err) {\n      console.log(err);\n      alert(err.message);\n    }\n  };\n\n  // Extract x-axis labels and random numbers\n  const labels = dataPoints.map(point => point.Label);\n  const randomNumbers = dataPoints.map(point => parseFloat(point.RandomNumber));\n\n  // Data to be plotted\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Random Numbers',\n      data: randomNumbers,\n      fill: false,\n      backgroundColor: 'rgb(75, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.2)'\n    }]\n  };\n  const options = {\n    scales: {\n      xAxes: [{\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10\n        }\n      }]\n    }\n  };\n  const fetchYAxis = async () => {\n    try {\n      const response = await axios.get('https://retoolapi.dev/o5zMs5/data');\n      setYAxis(response.data);\n    } catch (err) {\n      console.log(err);\n      alert(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchXAxis();\n    fetchYAxis();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VU2FjVKxHnEnlArDm9MP0xxfpn0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Line","jsxDEV","_jsxDEV","App","_s","xAxis","setXAxis","yAxis","setYAxis","fetchXAxis","response","get","data","err","console","log","alert","message","labels","dataPoints","map","point","Label","randomNumbers","parseFloat","RandomNumber","datasets","label","fill","backgroundColor","borderColor","options","scales","xAxes","ticks","autoSkip","maxTicksLimit","fetchYAxis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ritikthakur/Desktop/assessment/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from 'axios'\nimport { Line } from 'react-chartjs-2';\n\nfunction App() {\n\n  const [xAxis, setXAxis] = useState([])\n  const [yAxis, setYAxis] = useState([])\n\n  const fetchXAxis = async () => {\n    try {\n      const response = await axios.get('https://retoolapi.dev/gDa8uC/data')\n      setXAxis(response.data)\n    }catch(err) {\n      console.log(err)\n      alert(err.message)\n    } \n  }\n\n    // Extract x-axis labels and random numbers\n    const labels = dataPoints.map(point => point.Label);\n    const randomNumbers = dataPoints.map(point => parseFloat(point.RandomNumber));\n  \n    // Data to be plotted\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Random Numbers',\n          data: randomNumbers,\n          fill: false,\n          backgroundColor: 'rgb(75, 192, 192)',\n          borderColor: 'rgba(75, 192, 192, 0.2)',\n        },\n      ],\n    };\n  \n    const options = {\n      scales: {\n        xAxes: [{\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10\n          }\n        }]\n      }\n    };\n\n  const fetchYAxis = async () => {\n    try {\n      const response = await axios.get('https://retoolapi.dev/o5zMs5/data')\n      setYAxis(response.data)\n    }catch(err) {\n      console.log(err)\n      alert(err.message)\n    } \n  }\n\n  useEffect(() => {\n    fetchXAxis()\n    fetchYAxis()\n  }, [])\n  return (\n    <div className=\"App\">\n     app\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmC,CAAC;MACrEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,QAAMC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;IACpB;EACF,CAAC;;EAEC;EACA,MAAMC,MAAM,GAAGC,UAAU,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EACnD,MAAMC,aAAa,GAAGJ,UAAU,CAACC,GAAG,CAACC,KAAK,IAAIG,UAAU,CAACH,KAAK,CAACI,YAAY,CAAC,CAAC;;EAE7E;EACA,MAAMb,IAAI,GAAG;IACXM,MAAM,EAAEA,MAAM;IACdQ,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBf,IAAI,EAAEW,aAAa;MACnBK,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,mBAAmB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,KAAK,EAAE,CAAC;QACNC,KAAK,EAAE;UACLC,QAAQ,EAAE,IAAI;UACdC,aAAa,EAAE;QACjB;MACF,CAAC;IACH;EACF,CAAC;EAEH,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM3B,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmC,CAAC;MACrEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,QAAMC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;IACpB;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC;IACZ4B,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN,oBACEnC,OAAA;IAAKoC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAAC;EAErB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACvC,EAAA,CA/DQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AAiEZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}